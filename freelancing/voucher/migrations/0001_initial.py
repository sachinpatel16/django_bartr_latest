# Generated by Django 4.2 on 2025-07-28 16:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "custom_auth",
            "0008_sitesetting_rename_updated_at_wallet_update_time_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="VoucherType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_delete", models.BooleanField(default=False)),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Voucher Type Name"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WhatsAppContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_delete", models.BooleanField(default=False)),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("phone_number", models.CharField(max_length=20)),
                ("is_on_whatsapp", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whatsapp_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Voucher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_delete", models.BooleanField(default=False)),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "terms_conditions",
                    models.TextField(
                        blank=True,
                        default="Only one offer can be redeemed per transaction.\nThis offer is applicable once per user.\nThis offer can't be redeemed or clubbed with any other offers.\nThis offer is valid in select McDonald's (Hardcastle Restaurants) Branches in the West and South of India.\nThis offer is not applicable on delivery orders.\nThis offer cannot be replaced with cash.\nThis offer is valid while stocks lasts - McDonald's West and South (Hardcastle Restaurants Pvt. Ltd.) reserves the right to change the offers, menu and offers period any time without prior notice.",
                        verbose_name="Terms & Conditions",
                    ),
                ),
                (
                    "count",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Redemption Count"
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="vouchers/"),
                ),
                (
                    "percentage_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "percentage_min_bill",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "flat_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "flat_min_bill",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "product_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "product_min_bill",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("redemption_count", models.PositiveIntegerField(default=0)),
                ("is_gift_card", models.BooleanField(default=False)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="vouchers",
                        to="custom_auth.category",
                    ),
                ),
                (
                    "merchant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vouchers",
                        to="custom_auth.merchantprofile",
                    ),
                ),
                (
                    "voucher_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="vouchers",
                        to="voucher.vouchertype",
                    ),
                ),
            ],
            options={
                "ordering": ["-create_time"],
            },
        ),
        migrations.CreateModel(
            name="Advertisement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_delete", models.BooleanField(default=False)),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                ("banner_image", models.ImageField(upload_to="advertisements/")),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                (
                    "voucher",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="advertisement",
                        to="voucher.voucher",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
